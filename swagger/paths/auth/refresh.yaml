tags:
  - Authentication
summary: Refresh access token
description: |
  Refreshes the user's access token using the refresh token stored in HTTP-only cookie.
  
  **Security Features:**
  - Rate limiting to prevent abuse
  - CSRF protection via secure input middleware
  - Origin validation
  
  **How it works:**
  1. Reads refresh token from HTTP-only cookie
  2. Validates the refresh token
  3. Generates new access token and refresh token
  4. Sets new tokens in cookies
  
  **Authentication:** This endpoint does NOT require access token - it uses refresh token from cookie.
operationId: refreshTokens
security: []
requestBody:
  required: false
  description: No request body needed - uses refresh token from cookie
responses:
  '200':
    description: |
      Tokens refreshed successfully.
      
      **Important:** After successful refresh, you receive:
      - `accessToken` in the response body - use this for authenticated requests
      - New `refreshToken` in HTTP-only cookie - automatically handled by browser
      - New CSRF token in cookie - include in subsequent requests as `X-CSRF-Token` header
      
      The old refresh token is invalidated and replaced.
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 200
              description: HTTP status code
            message:
              type: string
              example: "Refresh token was successfully retrieved"
              description: Response message
            data:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: Unique user identifier
                      example: "550e8400-e29b-41d4-a716-446655440000"
                    firstName:
                      type: string
                      description: User's first name
                      example: "John"
                    lastName:
                      type: string
                      description: User's last name
                      example: "Doe"
                    email:
                      type: string
                      format: email
                      description: User's email address
                      example: "john.doe@example.com"
                    phoneNumber:
                      type: string
                      description: User's phone number
                      example: "07123456789"
                    avatarUrl:
                      type: string
                      format: uri
                      nullable: true
                      description: URL to user's avatar image
                      example: null
                    address_id:
                      type: string
                      format: uuid
                      nullable: true
                      description: ID of user's address
                      example: null
                    createdAt:
                      type: string
                      format: date-time
                      description: User creation timestamp
                      example: "2023-12-01T10:30:00.000Z"
                    updatedAt:
                      type: string
                      format: date-time
                      description: User last update timestamp
                      example: "2023-12-01T10:30:00.000Z"
                accessToken:
                  type: string
                  description: New JWT access token for authentication
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    headers:
      Set-Cookie:
        description: |
          HTTP-only cookies automatically set by the server:
          - refreshToken: New refresh token (old one is invalidated)
          - csrfToken: New CSRF protection token
        schema:
          type: string
          example: "refreshToken=newtoken123...; HttpOnly; Secure; SameSite=Strict"
  '401':
    description: Unauthorized - No refresh token provided or invalid token
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: integer
              example: 401
            message:
              type: string
              example: "No refresh token provided"
        examples:
          no_token:
            summary: No refresh token in cookie
            value:
              status: 401
              message: "No refresh token provided"
          invalid_token:
            summary: Invalid or expired refresh token
            value:
              status: 401
              message: "Invalid refresh token"
  '403':
    description: Forbidden - CSRF token validation failed
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: integer
              example: 403
            message:
              type: string
              example: "CSRF token validation failed"
  '429':
    description: Too many requests - Rate limit exceeded
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: integer
              example: 429
            message:
              type: string
              example: "Too many requests, please try again later"
  '500':
    description: Internal server error
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: integer
              example: 500
            message:
              type: string
              example: "Internal server error"

